var content_css = /**


/* Variables */
/* Fonts */
/* @import url(https://fonts.googleapis.com/css?family=Open+Sans:300,700); */
//打印机媒体查询
@media print {
     body{
        -webkit-print-color-adjust:exact;
        -moz-print-color-adjust:exact;
        -ms-print-color-adjust:exact;
        print-color-adjust:exact;
    } 
    button{display:none;}
    .custom-context-menu{display:none;}
    
}

:root {
  --main-bg-color: #f7f4ed;
  --main-txt-color: #31322c;
  --main-hl-color: #fecc11;
  --main-normal-color: #31322c;
}

body {
  font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  font-size: 1em;
  font-weight: 300;
  line-height: 1.5;
  letter-spacing: 0.05em;
  background-color: var(--main-bg-color);
  text : var(--main-normal-color);
  color : var(--main-normal-color);
}

/* Layout */
* {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

/* Styling */
.timeline {
  margin: 4em auto;
  position: relative;
  max-width: 60em;
}
.timeline:before {
  background-color: var(--main-txt-color);
  content: '';
  margin-left: 0px;
  position: absolute;
  top: 0;
  left: 80px;
  width: 2px;
  height: 100%;
}

.timeline-event {
  position: relative;
}

@media only screen {
	.timeline-event:hover .timeline-event-icon {
  		-moz-transform: rotate(-45deg);
  		-ms-transform: rotate(-45deg);
  		-webkit-transform: rotate(-45deg);
  		transform: rotate(-45deg);
  		background-color: #801dae;
	}
	
	.timeline-event:hover .timeline-event-thumbnail {
  		-moz-box-shadow: inset 40em 0 0 0 #801dae;
  		-webkit-box-shadow: inset 40em 0 0 0 #801dae;
  		box-shadow: inset 40em 0 0 0 #801dae;
	}
}

.timeline-event-copy {
  padding-left: 1.5em;
  padding-right: 1.5em
  padding-top: 1em;
  padding-bottom: 0em;
  position: relative;
  top: -0.5em;
  left: 2em;
  width: 80%;
}
.timeline-event-copy h3 {
  font-size: 1.5em;
  margin-top: 0.3em;
  margin-bottom: 0.3em;
}
.timeline-event-copy h4 {
  font-size: 1.2em;
  margin-top: 0.2em;
  margin-bottom: 0.2em;
}
.timeline-event-copy h5 {
  font-size: 1.1em;
  margin-top: 0.1em;
  margin-bottom: 0.1em;
}
.timeline-event-copy strong {
  font-weight: 700;
}
.timeline-event-copy p:not(.timeline-event-thumbnail) {
  padding-bottom: 0.1em;
}

.timeline-event-icon {
  -moz-transition: -moz-transform 0.2s ease-in;
  -o-transition: -o-transform 0.2s ease-in;
  -webkit-transition: -webkit-transform 0.2s ease-in;
  transition: transform 0.2s ease-in;
  -moz-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
  background-color: var(--main-txt-color);
  outline: 10px solid var(--main-bg-color);
  display: block;
  margin: 0.5em 0.5em 0.5em -0.5em;
  position: absolute;
  top: 0;
  left: 40px;
  width: 1em;
  height: 1em;
}

.timeline-event-thumbnail {
  -moz-transition: box-shadow 0.5s ease-in 0.1s;
  -o-transition: box-shadow 0.5s ease-in 0.1s;
  -webkit-transition: box-shadow 0.5s ease-in;
  -webkit-transition-delay: 0.1s;
  transition: box-shadow 0.5s ease-in 0.1s;
  color: white;
  font-size: 0.75em;
  background-color: var(--main-txt-color);
  -moz-box-shadow: inset 0 0 0 0em #bf242a;
  -webkit-box-shadow: inset 0 0 0 0em #bf242a;
  box-shadow: inset 0 0 0 0em #bf242a;
  display: inline-block;
  margin-bottom: 0.5em;
  padding: 0.25em 1em 0.2em 1em;
  color: var(--main-bg-color);
}

#listContent>li::marker {
  content: '';
}

.custom-context-menu>li::marker {
  content: '';
}

.timeline-event-disable {
	position: relative;
}
.timeline-event-disable:hover .timeline-event-icon-disable {

}

.timeline-event-disable:hover .timeline-event-thumbnail-disable {

}

.timeline-event-icon-disable {
  -moz-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
  background-color: var(--main-txt-color);
  outline: 10px solid var(--main-bg-color);
  display: block;
  margin: 0.5em 0.5em 0.5em -0.5em;
  position: absolute;
  top: 0;
  left: 40px;
  width: 1em;
  height: 1em;
}

.timeline-event-thumbnail-disable {
  color: white;
  font-size: 0.75em;
  background-color: var(--main-txt-color);
  -moz-box-shadow: inset 0 0 0 0em #bf242a;
  -webkit-box-shadow: inset 0 0 0 0em #bf242a;
  box-shadow: inset 0 0 0 0em #bf242a;
  display: inline-block;
  margin-bottom: 0.5em;
  padding: 0.25em 1em 0.2em 1em;
  color: var(--main-bg-color);
}

.mkd strong {
  background-color: var(--main-hl-color);
}

input[type="checkbox"]:disabled {
    color: var(--main-normal-color);
}

**/; 
var content_body = /**
<ul id="listContent" class="timeline">
</ul>  
**/;

var content_js = /**
<script type="text/javascript">
	var tempTable = document.createElement("ul");
	tempTable.setAttribute("id","listContentTemp");
	
	//定义全局函数
	window.clearList = function(){
		var ListEles = document.getElementById("listContent");
		ListEles.innerHTML = "";
	};
	
	window.clearListTemp = function(){
		tempTable.innerHTML = "";
	}
	
	window.replaceList = function(){
		var ListEles = document.getElementById("listContent");
		ListEles.innerHTML = tempTable.innerHTML;
	}
	
	window.lengthList = function(){
		var ListEles = document.getElementById("listContent");
		return ListEles.childElementCount; 
	}
	
	window.pushTable = function(datas){	
		var liEle = window.createLi(datas);
		tempTable.appendChild(liEle);
	};
	
	window.updateContent = function(datas){
		var liEle = document.getElementById(datas[0]);
		var tempEle = window.createLi(datas);
		liEle.parentNode.replaceChild(tempEle,liEle);
	}
	
	window.removeContent = function(datas){
		var liEle = document.getElementById(datas[0]);
		liEle.remove();
	}
	
	window.createLi = function(datas){
		var isAnimated = document.querySelector(".timeline-event");
		if(isAnimated){
			var liEleClass = "timeline-event";
			var labelEleClass = "timeline-event-icon";
			var timeEleClass = "timeline-event-thumbnail";
		}
		else {
			var liEleClass = "timeline-event-disable";
			var labelEleClass = "timeline-event-icon-disable";
			var timeEleClass = "timeline-event-thumbnail-disable";
		};
		
		var liEle = document.createElement("li");
		liEle.setAttribute("class",liEleClass);
		liEle.setAttribute("id",datas[0])
		liEle.setAttribute("ondblclick","dblFunc()")
		
		var labelEle = document.createElement("label");
		labelEle.setAttribute("class",labelEleClass);
		
		var divEle = document.createElement("div");
		divEle.setAttribute("class","timeline-event-copy");
		
		var timeEle = document.createElement("p");
		timeEle.setAttribute("class",timeEleClass);
		//timeEle.setAttribute("ondblclick","dblFunc()")

		timeEle.innerText = datas[0];
		
		var titleEle = document.createElement("h2");
		titleEle.innerText = datas[1];
		var titleWrapEle = document.createElement("div");
		titleWrapEle.setAttribute("class","mkd")
		titleWrapEle.appendChild(titleEle);
		
		var contentEle = document.createElement("div");
		contentEle.setAttribute("class","mkd")
		contentEle.innerHTML = datas[2];
		
		divEle.appendChild(timeEle);
		divEle.appendChild(titleWrapEle);
		divEle.appendChild(contentEle);
		
		console.log(datas)
		if(datas[3] != 'null'){
			var imgEle = document.createElement("img");
			imgEle.setAttribute("src",datas[3]);
			imgEle.setAttribute("width","100%");
			imgEle.setAttribute("height","auto");
			imgEle.setAttribute("style","max-height:450px; object-fit: scale-down;");
			divEle.appendChild(imgEle)
		}
			
		liEle.appendChild(labelEle);
		liEle.appendChild(divEle);
		return liEle; 
	};
	
	 function setTitle(title){
		document.title = title;
	}
	
	function dblFunc() {
	    let currentLi = event.currentTarget;//取出当前元素
	    let timeIndex = currentLi.getAttribute("id");
	    console.log(timeIndex);
	    //console.log(event);
	    aardio.modifyList(timeIndex);
	};
	
	
	function download() {
		var content = document.documentElement.outerHTML;
    	var blob = new Blob([content], {type: 'text/html'});
    	var url = window.URL.createObjectURL(blob);
    	var a = document.createElement('a');
	
    	a.style = "display: none";
    	a.href = url;
    	a.download = document.title+".html";
    	document.body.appendChild(a);
    	a.click();
	
    	setTimeout(function () {
        	document.body.removeChild(a);
        	window.URL.revokeObjectURL(url);
    	}, 5);
	};
	
	function getHtml(){
		var content = document.documentElement.outerHTML;
		return content; 
	};
	
	
	function Wider(){
		var timelineEle = document.querySelector(".timeline"); 
		timelineEle.style.maxWidth = '100em';
	};

	function Middle(){
		var timelineEle = document.querySelector(".timeline"); 
		timelineEle.style.maxWidth = '80em';
	};
	
	function Smaller(){
		var timelineEle = document.querySelector(".timeline"); 
		timelineEle.style.maxWidth = '60em';
	};
	
	function changeClass(className,oldClass,newClass){
		var objectNodes = document.querySelectorAll(className);
		if(objectNodes){
			objectNodes.forEach((object) => {
				var regExp = new RegExp('(?:^|\\s)' + oldClass + '(?!\\S)', 'g');
    			object.className = object.className.replace( regExp , newClass );
			});			
		};
	}
	
	function animationActivate(){
		changeClass(".timeline-event-disable","timeline-event-disable","timeline-event");
        changeClass(".timeline-event-icon-disable","timeline-event-icon-disable","timeline-event-icon");
        changeClass(".timeline-event-thumbnail-disable","timeline-event-thumbnail-disable","timeline-event-thumbnail");
	}
	
	
	function hexToRgba(hex) {
		var rgbaNum = 'rgba(' + parseInt('0x' + hex.slice(3, 5)) + ',' + parseInt('0x' + hex.slice(5, 7)) + ',' + parseInt('0x' + hex.slice(7, 9)) + ',' + parseInt('0x' + hex.slice(1, 3))/255 + ')'
		console.log(rgbaNum);console.log(hex);
  		return rgbaNum;
	}
	function themeSet(themeData){
		const root = document.querySelector(':root');
		root.style.setProperty('--main-bg-color', hexToRgba('#'+themeData[0]));
		root.style.setProperty('--main-txt-color', hexToRgba('#'+themeData[1]));
		root.style.setProperty('--main-hl-color', hexToRgba('#'+themeData[2]));
		root.style.setProperty('--main-normal-color', hexToRgba('#'+themeData[3]));
	}
	
	var currentMouseEle = document.querySelectorAll(":hover"); 
	
	document.addEventListener("contextmenu", (e) => {
		currentMouseEle = document.querySelectorAll(":hover");
  		e.preventDefault();
  		hideMenu(e);
  		showMenu(e);
	});
	
	function shiftColor(base, change, direction) {
  		const colorRegEx = /^\#?[A-Fa-f0-9]{6}$/;
		
  		// Missing parameter(s)
  		if (!base || !change) {
    		return '000000';
  		}
		
  		// Invalid parameter(s)
  		if (!base.match(colorRegEx) || !change.match(colorRegEx)) {
    		return '000000';
  		}
		
  		// Remove any '#'s
  		base = base.replace(/\#/g, '');
  		change = change.replace(/\#/g, '');
		
  		// Build new color
  		let newColor = '';
  		for (let i = 0; i < 3; i++) {
    		const basePiece = parseInt(base.substring(i * 2, i * 2 + 2), 16);
    		const changePiece = parseInt(change.substring(i * 2, i * 2 + 2), 16);
    		let newPiece = '';
		
    		if (direction === 'add') {
      		newPiece = (basePiece + changePiece);
      		newPiece = newPiece > 255 ? 255 : newPiece;
    		}
    		if (direction === 'sub') {
      		newPiece = (basePiece - changePiece);
      		newPiece = newPiece < 0 ? 0 : newPiece;
    		}
		
    		newPiece = newPiece.toString(16);
    		newPiece = newPiece.length < 2 ? '0' + newPiece : newPiece;
    		newColor += newPiece;
  		}
  		
  		newColor = '#' + newColor;
		
  		return newColor;
	}
	
	function isElPropColor(el, prop, color) {
  		const ctx = document.createElement('canvas').getContext('2d');
  		ctx.fillStyle = color;
  		ctx.fillRect( 0, 0, 1, 1 );
  		ctx.fillStyle = getComputedStyle(el, null).getPropertyValue(prop);
  		ctx.fillRect( 1, 0, 1, 1 );
  		const a = JSON.stringify(Array.from(ctx.getImageData(0, 0, 1, 1).data));
  		const b = JSON.stringify(Array.from(ctx.getImageData(1, 0, 1, 1).data));
  		ctx.canvas = null;
  		return a === b;
	}
	
	function alwaysGotColorRGBA(el, prop) {
  		const ctx = document.createElement('canvas').getContext('2d');
  		ctx.fillStyle = getComputedStyle(el, null).getPropertyValue(prop);
  		ctx.fillRect( 1, 0, 1, 1 );
  		const b = JSON.stringify(Array.from(ctx.getImageData(1, 0, 1, 1).data));
  		ctx.canvas = null;
		let textSlice = b.slice(1,-1);
		const rgbaArray = textSlice.split(",", 3);
  		console.log(rgbaArray)
  		return rgbaArray;
	}
	
	function RGB2HEX(rgbList) {
    	//rgb = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
    	function hex(x) {
        	return ("0" + parseInt(x).toString(16)).slice(-2);
    	}
    	return "#" + hex(rgbList[0]) + hex(rgbList[1]) + hex(rgbList[2]);
	}
	
	function showMenu(e) {
		var tempBgColorRGBA = alwaysGotColorRGBA(document.body, 'background-color');
		var tempBgColor = RGB2HEX(tempBgColorRGBA);
		console.log(tempBgColor);
		
		var tempTxtColorRGBA = alwaysGotColorRGBA(document.body, 'color');
		var tempTxtColor = RGB2HEX(tempTxtColorRGBA);
		console.log(tempTxtColor);
		
		
		if(currentMouseEle.length>3){
			const menus1 = menuSinglton.getInstance();
  			menus1.style.top = `${e.clientY-20}px`;
  			menus1.style.left = `${e.clientX-6}px`;
  			menus1.style.display = "block";
  			menus1.style.position = "fixed";
  			menus1.style.border = "1px solid #31322c";
  			menus1.style.padding = "6px 3px";
  			menus1.style.fontSize = "large";
  			menus1.style.fontWeight = "600";
  			menus1.style.backdropFilter = "blur(8px)";
  			menus1.style.boxShadow = '6px 6px 3px 3px rgba(' + tempTxtColorRGBA[0] + ',' + tempTxtColorRGBA[1] + ',' + tempTxtColorRGBA[2] + ', .3)';
  			//menus1.style.background = shiftColor("#f5f2e9","#101010",'add')
  			//menus1.style.color = "#ffffff";
  			menus1.style.background = shiftColor(tempBgColor,"#101010",'add')
  			menus1.style.color = shiftColor(tempTxtColor,"#060606",'sub')
		}
  		else {
  			const menus2 = menuLess.getInstance();
  			menus2.style.top = `${e.clientY-20}px`;
  			menus2.style.left = `${e.clientX-6}px`;
  			menus2.style.display = "block";
  			menus2.style.position = "fixed";
  			menus2.style.border = "1px solid #31322c";
  			menus2.style.padding = "6px 3px";
  			menus2.style.fontSize = "large";
  			menus2.style.fontWeight = "600";
  			menus2.style.backdropFilter = "blur(8px)";
  			//menus2.style.boxShadow = "6px 6px 3px 3px rgba(122, 123, 120, .3)";
  			menus2.style.boxShadow = '6px 6px 3px 3px rgba(' + tempTxtColorRGBA[0] + ',' + tempTxtColorRGBA[1] + ',' + tempTxtColorRGBA[2] + ', .3)';
  			//menus2.style.background = shiftColor("#f5f2e9","#101010",'add')
  			//menus2.style.color = "#ffffff";
  			menus2.style.background = shiftColor(tempBgColor,"#101010",'add')
  			menus2.style.color = shiftColor(tempTxtColor,"#060606",'sub')
  		}
	}
	
	function hideMenu(e) {
  		const menus1 = menuSinglton.getInstance();
  		menus1.style.display = "none";
  		const menus2 = menuLess.getInstance();
  		menus2.style.display = "none";
	}
	
	document.addEventListener("click", hideMenu);
	
	const ContextMenuSinglton = function (options) {
  	// 唯一实例
  		let instance;
		
  		// 创建实例方法
  		function createMenu() {
  			const ul = document.createElement("ul");
  			ul.classList.add("custom-context-menu");
  			const { menus } = options;
  			if (menus && menus.length > 0) {
    			for (let menu of menus) {
      				const li = document.createElement("li");
      				li.textContent = menu.name;
      				li.onclick = menu.onClick;
      				ul.appendChild(li);
    			}
  			}
  			const body = document.querySelector("body");
  			body.appendChild(ul);
  			return ul;
  		}
		
  		return {
    		// 获取实例的唯一方式
    		getInstance: function () {
      			if (!instance) {
        			instance = createMenu();
      			}
      			return instance;
    		},
  		};
	};
	
	const ContextMenuLess = function (options) {
  	// 唯一实例
  		let instance;
		
  		// 创建实例方法
  		function createMenu() {
  			const ul = document.createElement("ul");
  			ul.classList.add("custom-context-menu");
  			const { menus } = options;
  			if (menus && menus.length > 0) {
    			for (let menu of menus) {
      				const li = document.createElement("li");
      				li.textContent = menu.name;
      				li.onclick = menu.onClick;
      				ul.appendChild(li);
    			}
  			}
  			const body = document.querySelector("body");
  			body.appendChild(ul);
  			return ul;
  		}
		
  		return {
    		// 获取实例的唯一方式
    		getInstance: function () {
      			if (!instance) {
        			instance = createMenu();
      			}
      			return instance;
    		},
  		};
	};
	
	const menuSinglton = ContextMenuSinglton({
  		menus: [
    		{
      			name: "刷新",
      			onClick: function (e) {
        			aardio.flush();
      			},
    		},
    		{
      			name: "编辑此项",
      			onClick: function (e) {
      			    if(currentMouseEle.length>3){
				    	console.log(currentMouseEle[3]);
				    	let currentMouseEleLi = currentMouseEle[3];
	    				let timeIndex = currentMouseEleLi.getAttribute("id");
	    				console.log(timeIndex);
	    				aardio.modifyList(timeIndex);
      			    };
      			},
    		},
    		{
      			name: "关闭动画",
      			onClick: function (e) {
      			    hideMenu(e);
        			changeClass(".timeline-event","timeline-event","timeline-event-disable");
        			changeClass(".timeline-event-icon","timeline-event-icon","timeline-event-icon-disable");
        			changeClass(".timeline-event-thumbnail","timeline-event-thumbnail","timeline-event-thumbnail-disable");
      			},
    		},
    		{
      			name: "打开动画",
      			onClick: function (e) {
      			    hideMenu(e);
        			changeClass(".timeline-event-disable","timeline-event-disable","timeline-event");
        			changeClass(".timeline-event-icon-disable","timeline-event-icon-disable","timeline-event-icon");
        			changeClass(".timeline-event-thumbnail-disable","timeline-event-thumbnail-disable","timeline-event-thumbnail");
      			},
    		},
    		{
      			name: "显示范围：宽",
      			onClick: function (e) {
      			    hideMenu(e);
        			Wider();
      			},
    		},
    		{
      			name: "显示范围：中",
      			onClick: function (e) {
      			    hideMenu(e);
        			Middle();
      			},
    		},
    		{
      			name: "显示范围：窄",
      			onClick: function (e) {
      			    hideMenu(e);
        			Smaller();
      			},
    		},
    		{
      			name: "导出为pdf",
      			onClick: function (e) {
      			    hideMenu(e);
        			window.print();
      			},
    		},
    		{
      			name: "保存为html",
      			onClick: function (e) {
      			    hideMenu(e);
					download();
      			},
    		},
  		],
	});
	
	const menuLess = ContextMenuLess({
  		menus: [
    		{
      			name: "刷新",
      			onClick: function (e) {
        			aardio.flush();
      			},
    		},
    		{
      			name: "关闭动画",
      			onClick: function (e) {
      			    hideMenu(e);
        			changeClass(".timeline-event","timeline-event","timeline-event-disable");
        			changeClass(".timeline-event-icon","timeline-event-icon","timeline-event-icon-disable");
        			changeClass(".timeline-event-thumbnail","timeline-event-thumbnail","timeline-event-thumbnail-disable");
      			},
    		},
    		{
      			name: "打开动画",
      			onClick: function (e) {
      			    hideMenu(e);
        			changeClass(".timeline-event-disable","timeline-event-disable","timeline-event");
        			changeClass(".timeline-event-icon-disable","timeline-event-icon-disable","timeline-event-icon");
        			changeClass(".timeline-event-thumbnail-disable","timeline-event-thumbnail-disable","timeline-event-thumbnail");
      			},
    		},
    		{
      			name: "显示范围：宽",
      			onClick: function (e) {
      			    hideMenu(e);
        			Wider();
      			},
    		},
    		{
      			name: "显示范围：中",
      			onClick: function (e) {
      			    hideMenu(e);
        			Middle();
      			},
    		},
    		{
      			name: "显示范围：窄",
      			onClick: function (e) {
      			    hideMenu(e);
        			Smaller();
      			},
    		},
    		{
      			name: "导出为pdf",
      			onClick: function (e) {
      			    hideMenu(e);
        			window.print();
      			},
    		},
    		{
      			name: "保存为html",
      			onClick: function (e) {
      			    hideMenu(e);
					download();
      			},
    		},
  		],
	});
	
	document.onkeydown = function (e) {
    	var key = e.keyCode;
    	//便于说明，下面代码使用多个if，应用时可使用"||"合并
    	if (key == 116) {
        	//禁用F5刷新
        	return false;
    	} else if(event.ctrlKey && key==82){
        	//禁用ctrl+R刷新
        	return false;
    	}
	};
</script>
**/;

return content_css,content_body,content_js; 