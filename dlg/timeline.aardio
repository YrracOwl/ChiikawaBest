import fonts.fontAwesome;
import win.ui;
/*DSG{{*/
var winform = win.form(text="时间线";right=1279;bottom=743;border="none";clipch=1)
winform.add(
datetimepick={cls="datetimepick";left=64;top=64;right=272;bottom=88;border=1;dl=1;dt=1;font=LOGFONT(h=-13);z=2};
listbox={cls="listbox";left=8;top=512;right=272;bottom=744;db=1;dl=1;dt=1;edge=1;font=LOGFONT(h=-13);items={};ownerDraw=1;vscroll=1;z=14};
plus10={cls="plus";text="内容：";left=8;top=160;right=64;bottom=184;dl=1;dt=1;font=LOGFONT(h=-13);notify=1;z=10};
plus7={cls="plus";text="标题：";left=8;top=128;right=64;bottom=152;dl=1;dt=1;font=LOGFONT(h=-13);notify=1;z=7};
plus8={cls="plus";text="时间：";left=8;top=96;right=64;bottom=120;dl=1;dt=1;font=LOGFONT(h=-13);notify=1;z=8};
plus9={cls="plus";text="日期：";left=8;top=64;right=64;bottom=88;dl=1;dt=1;font=LOGFONT(h=-13);notify=1;z=9};
["win时间线"]={cls="custom";text="win时间线";left=280;top=64;right=1280;bottom=736;db=1;dl=1;dr=1;dt=1;z=1};
内容plus={cls="plus";left=8;top=184;right=272;bottom=472;align="left";border={color=-6908266;width=1};dl=1;dt=1;editable=1;font=LOGFONT(h=-13);forecolor=16777215;multiline=1;notify=1;tabstop=1;textPadding={top=6;bottom=2};wrap=1;z=4};
删除plus={cls="plus";text="删除";left=8;top=32;right=84;bottom=58;align="left";bgcolor=-13228317;border={radius=13};dl=1;dt=1;font=LOGFONT(h=-16);iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=10}};iconText='\uF014';notify=1;textPadding={left=28};z=15};
勾选plus={cls="plus";text="当前时间";left=176;top=96;right=272;bottom=120;align="left";dl=1;dt=1;font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome')};iconText='\uF111 ';notify=1;textPadding={left=24};z=6};
取消plus={cls="plus";text="取消";left=200;top=32;right=276;bottom=58;align="left";bgcolor=10389606;border={radius=13};dl=1;dt=1;font=LOGFONT(h=-16);iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=10}};iconText='\uF00D';notify=1;textPadding={left=28};z=16};
当前主题={cls="plus";left=392;top=32;right=1152;bottom=56;dl=1;dr=1;dt=1;font=LOGFONT(h=-16;underline=1;weight=700);notify=1;z=11};
时间plus={cls="plus";left=64;top=96;right=168;bottom=120;autohscroll=false;autovscroll=false;border={color=-6908266;width=1};dl=1;dt=1;editable="edit";font=LOGFONT(h=-16);notify=1;tabstop=1;textPadding={bottom=1};z=5};
标题plus={cls="plus";left=64;top=128;right=272;bottom=152;border={bottom=1;color=-6908266};dl=1;dt=1;editable=1;font=LOGFONT(h=-13);forecolor=16777215;notify=1;tabstop=1;textPadding={top=2;bottom=2};z=3};
添加plus={cls="plus";text="添加(Ctrl+G)";left=144;top=480;right=272;bottom=506;align="left";bgcolor=-5197169;border={radius=13};dl=1;dt=1;font=LOGFONT(h=-16);iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={left=10;top=2}};iconText='\uF0C7';notify=1;textPadding={left=30};z=12};
添加提醒项={cls="plus";text="添加提醒项";left=8;top=480;right=136;bottom=506;align="left";bgcolor=-5197169;border={radius=10};dl=1;dt=1;font=LOGFONT(h=-16);iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={left=10;top=2}};iconText='\uF0A2';notify=1;textPadding={left=30};z=13}
)
/*}}*/

import win.ui.tooltip; 

//下面创建一个手动跟踪模式的提示控件
var balloonTipCtrl = win.ui.tooltip.tracking(winform,false);

//初始化
var currentTimeLine = "default"; 
winform.标题plus.text = "";
winform.内容plus.text = "";

winform.标题plus.setCueBannerText("请输入标题，默认当前时间");
winform.内容plus.setCueBannerText("请输入内容，默认为还没想好");

winform.时间plus.focusOnClick = false;

winform.添加提醒项.skin({
	background={
		active=0xFFD3E0BC;
		default=0x668FB2B0;
		disabled=0xFFCCCCCC;
		focus=0xFFE3E3E3;
		hover=0xFF928BB3
	};
	color={
		default=0xFF000000;
		disabled=0xFF6D6D6D
	}
})
winform.添加plus.skin({
	background={
		active=0xFFD3E0BC;
		default=0x668FB2B0;
		disabled=0xFFCCCCCC;
		focus=0xFFE3E3E3;
		hover=0xFF928BB3
	};
	color={
		default=0xFF000000;
		disabled=0xFF6D6D6D
	}
})
winform.勾选plus.skin({
	color={
		active=0xFF00FF00;
		default=0xFF000000;
		disabled=0xFF6D6D6D;
		hover=0xFFFF0000
	};
	checked={
		iconText='\uF058'
	}
})
winform.标题plus.skin(
	background = { 
		hover = "/res/images/btn-hover.png";
		focus = "/res/images/btn-focus.jpg";
		active = "/res/images/btn-active.png";
		disabled = "/res/images/btn-disabled.png"; 
	}
)

winform.内容plus.skin(
	background = { 
		hover = "/res/images/btn-hover.png";
		focus = "/res/images/btn-focus.jpg";
		active = "/res/images/btn-active.png";
		disabled = "/res/images/btn-disabled.png"; 
	}
)

winform.删除plus.skin(
	background = { 
		hover = "/res/images/btn-hover.png";
		focus = "/res/images/btn-focus.jpg";
		active = "/res/images/btn-active.png";
		disabled = "/res/images/btn-disabled.png"; 
	}
)

winform.取消plus.skin(
	background = { 
		hover = "/res/images/btn-hover.png";
		focus = "/res/images/btn-focus.jpg";
		active = "/res/images/btn-active.png";
		disabled = "/res/images/btn-disabled.png"; 
	}
)

winform.listbox.onMeasureItem = function(measureItem,dpiScaleX,dpiScaleY){
    //注意listbox的实际高度受行高的影响,只有自绘时才能设置行高
	measureItem.itemHeight = 32 * dpiScaleY;  
}

import gdip;
winform.listbox.onDrawItem = function(drawItem,dpiScaleX,dpiScaleY){
    var rc = drawItem.rcItem;
    
    //创建画板
	var graphics = gdip.graphics(drawItem.hDC);
	
	//创建背景刷子
	var brush = gdip.solidBrush(0xFFFFFFFF);
	graphics.fillRectangle(brush,rc.left,rc.top,rc.width(),rc.height())
	brush.delete(); 
	
	//画选区渐变背景
	if( drawItem.itemState & 0x1/*_ODS_SELECTED*/){
		var p1 = ::POINTF(rc.left,rc.top)
		var p2 = ::POINTF(rc.left,rc.bottom)  
		//var lineBrush = gdip.lineBrush(p1/*渐变起始坐标*/, p2 /*渐变终止坐标*/ , 0x2FFFFFFF/*起始颜色*/, 0xFFebe1a9/*结束颜色*/, 2/*_GdipWrapModeTileFlipY*/ )
		var lineBrush = gdip.lineBrush(p1/*渐变起始坐标*/, p2 /*渐变终止坐标*/ , 0xFFebe1a9/*起始颜色*/, 0xFFebe1a9/*结束颜色*/, 2/*_GdipWrapModeTileFlipY*/ )
		graphics.fillRectangle(lineBrush,rc.left,rc.top,rc.width(),rc.height());
		lineBrush.delete()
	}
	
	//第二个项目开始顶部画线	
	if( drawItem.itemID > 0 ){
		var pen = gdip.pen(0xFFDCDCCC,1);
		graphics.drawLine(pen, rc.left,rc.top,rc.right,rc.top);
		pen.delete()
	}
	
	//获取字体
	var font = gdip.font(drawItem.hDC);
	var strformat = gdip.stringformat (); 
  
	var str = winform.listbox.getItemText(drawItem.itemID + 1);
	//var brush = gdip.solidBrush(0xFF222222);
	var brush = gdip.solidBrush(0xFF000000);
	graphics.drawString( str , font , rc.inflate(-12,-4).float(), strformat,brush);
 
 	//释放对象
 	font.delete();
 	strformat.delete();
 	brush.delete();
    graphics.delete();
}

//界面设置
winform.添加提醒项.oncommand = function(id,event){
	..alarmForm.show(true);
}

import web.view;
var wb_tl = web.view(winform.win时间线,..wbUserDataDir,..launch_params); 

wb_tl.preloadScript(`
//禁止超链接默认开新窗口
window.addEventListener('load',function(){ 
	let base = document.querySelector('base'); 
	if (base) base.removeAttribute('target');	
})

//禁止超链接开新窗口
document.addEventListener('mousedown', function (event) {
  var target = event.target;
  for(var i=1;target && i<=5;i++){
  	if ( target.tagName == 'A')  {
  		target.removeAttribute('target');
  		return;
  	}
  	
  	target = target.parentNode; 
  } 
}, true);

//禁止弹窗函数
//window.open =  function(url){ window.location.href = url; }
`);

var template_func = loadcode("\res\template_timeline.aardio");

content_css,content_body,content_js = template_func();

//winform.datetimepick.setFormat("''HH':'mm':'ss, dddd, MMMdd日', 'yyyy")
winform.datetimepick.setFormat("yyyy年MM月dd日dddd")

import win.taskScheduler;
var timeUpdate = win.taskScheduler(winform); 

var task  = timeUpdate.create("每秒执行",function(){
	winform.datetimepick.time = time();
	winform.时间plus.text = tostring(time(__,'%H:%M:%S'));
	
} )

//每秒更新时间plus中的内容
task.interval = {  
   second = 1;
}
var thrdListboxUpdate = function(winform,database){
	var list_items = {}; 
	for rowid, time, title, content in database.each("SELECT rowid,* FROM ??",{winform.当前主题.text}) {
		table.push(list_items,time);
	}
	table.sort(list_items);
	winform.listbox.clear();
	for(k,v in list_items){
		winform.listbox.add(v)
	}
	
	if(winform.listbox.count<1){
		winform.listbox.show(false);
	}
	else {
		winform.listbox.show(true);
	}
};

var thrdTimelineUpdate = function(winform,database,wb_tl){
	wb_tl.xcall("clearListTemp");
	if(winform.listbox.count<1){
		wb_tl.xcall("pushTable",{"当前无内容";"无内容";"请在左侧添加"});
	}
	else {
		for(i=1;winform.listbox.count;1){
			var result = database.stepQuery("SELECT * FROM ??",{time = winform.listbox.items[i], winform.当前主题.text} )
			wb_tl.xcall("pushTable",{tostring(result.time);tostring(result.title);tostring(result.content)});
		}
	}
	wb_tl.xcall("replaceList");
};

thread.set("thrdListboxUpdate", thrdListboxUpdate);
thread.set("thrdTimelineUpdate", thrdTimelineUpdate);

wb_tl.external = {
	modifyList = function(timeSel){
		if(winform.listbox.count<1){
			return ; 
		}
		else {
			winform.勾选plus.checked = false;
    		winform.删除plus.disabled = false;
    		winform.取消plus.disabled = false;
    		winform.tiktokChecker(winform);
/*
    		winform.datetimepick.disabled = true;
    		winform.勾选plus.disabled = true;
    		winform.时间plus.editable = false;
			winform.时间plus.background = null;
*/
	
    		var result = ..dbTimeline.stepQuery("SELECT * FROM ??",{time = timeSel, winform.当前主题.text} );
    		winform.datetimepick.time = time(result.time);
    		winform.时间plus.text = string.split(result.time,'-')[2];
    		winform.标题plus.text = result.title;
    		winform.内容plus.text = result.content;
    		//手动显示提示
    		var x,y,cx,cy = winform.添加plus.getPos(true);
    		balloonTipCtrl.setText("点击<添加>保存，否则不修改").trackPopup(true,x+cx*3/4,y+cy );
		}
	};

	flush = function(){
		winform.标题plus.text = "";
		winform.内容plus.text = "";
		winform.时间plus.text = tostring(time(__,'%H:%M:%S'));
		balloonTipCtrl.trackPopup(false);
		winform.勾选plus.checked = true;
		winform.删除plus.disabled = true;
		winform.取消plus.disabled = true;
		winform.勾选plus.disabled = false;
		if(winform.勾选plus.checked){
			winform.datetimepick.disabled = true;
			winform.时间plus.editable = false;
			winform.时间plus.background = null;
			timeUpdate.start();
		}
		else {
			winform.datetimepick.disabled = false;
			winform.时间plus.editable = true;
			winform.时间plus.background = 0xFFFFFFFF;
			timeUpdate.stop();
		};
	};

};

wb_tl.html = /**
<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <?= content_css?>
    <?= content_js?>
</head>
<body>
	<?= content_body?>
</body>
</html>
**/;

//wb_tl.xcall("clearList");

/*
新增子事项
*/




winform.勾选plus.oncommand = function(id,event){
	winform.tiktokChecker(winform);
}


/*
子窗口函数
*/

winform.childWinUpdate = function(tlTitle){
	currentTimeLine = tlTitle;
	winform.当前主题.text = currentTimeLine;
}

winform.listboxUpdate = function(winform){
	var list_items = {}; 
	
	..logMsg(">>>更新时间线的listbox");
	for rowid, time, title, content in ..dbTimeline.each("SELECT rowid,* FROM ??",{winform.当前主题.text}) {
		table.push(list_items,time);
		..logMsg(time,rowid,title,content)
	}
	table.sort(list_items);
	winform.listbox.clear();
	for(k,v in list_items){
		winform.listbox.add(v)
	}
	
	if(winform.listbox.count<1){
		winform.listbox.show(false);
	}
	else {
		winform.listbox.show(true);
	}
}

winform.timelineWebUpdate = function(winform){
	wb_tl.xcall("clearListTemp");
	if(winform.listbox.count<1){
		wb_tl.xcall("pushTable",{"当前无内容";"无内容";"请在左侧添加"});
	}
	else {
		for(i=1;winform.listbox.count;1){
			var result = ..dbTimeline.stepQuery("SELECT * FROM ??",{time = winform.listbox.items[i], winform.当前主题.text} )
			wb_tl.xcall("pushTable",{tostring(result.time);tostring(result.title);tostring(result.content)});
		}
	}
	wb_tl.xcall("replaceList");
}


winform.tiktokChecker = function(winform){
	winform.勾选plus.disabled = false;
	if(winform.勾选plus.checked){
		winform.datetimepick.disabled = true;
		winform.时间plus.editable = false;
		winform.时间plus.background = null;
		timeUpdate.start();
	}
	else {
		winform.datetimepick.disabled = false;
		winform.时间plus.editable = true;
		winform.时间plus.background = 0xFFFFFFFF;
		timeUpdate.stop();
	}
}

winform.addUIReset = function(winform){
	winform.标题plus.text = "";
	winform.内容plus.text = "";
	winform.时间plus.text = tostring(time(__,'%H:%M:%S'));
	balloonTipCtrl.trackPopup(false);
	winform.勾选plus.checked = true;
	winform.删除plus.disabled = true;
	winform.取消plus.disabled = true;
	winform.tiktokChecker(winform);
}



//addUI复位
winform.勾选plus.checked = true;
winform.删除plus.disabled = true;
winform.取消plus.disabled = true;
winform.tiktokChecker(winform);

timeUpdate.start();
winform.时间plus.text = tostring(time(__,'%H:%M:%S'));

import win.ui.simpleWindow;
win.ui.simpleWindow(winform,,,,).skin(
	background = { 
		hover = 0xff99ffcc;
		active = 0xffff6666; 
		default = 0x00000000; 
	}
	color = { 
		hover = 0xff666666;
		active = 0xffffffff; 
		default = 0xFF7BA5BF; 
	}
)

winform.添加plus.oncommand = function(id,event){
	winform.添加plus.disabled = true;
	
	var timeFormat = string.split(winform.时间plus.text,':');
	if(tonumber(timeFormat[1]) && tonumber(timeFormat[2]) && tonumber(timeFormat[3])){
		if(tonumber(timeFormat[1])<24 && tonumber(timeFormat[2])<60 && tonumber(timeFormat[3])<60){
				var tl_time = winform.datetimepick.text + '-' + winform.时间plus.text; 
				var tl_title = winform.时间plus.text; 
				var tl_content = "还没想好"; 
				if(winform.标题plus.text != ""){
					tl_title = winform.标题plus.text;
				}
				if(winform.内容plus.text != ""){
					tl_content = winform.内容plus.text;
				}
				var cmd = ..dbTimeline.prepare("REPLACE INTO ?? VALUES ( @time,@title,@content);",{winform.当前主题.text});
				cmd.step(
					time = tl_time;
					title = tl_title;
					content = tl_content;
				)
				..logMsg(">>>写入成功：",winform.当前主题.text)
				
				if(winform.勾选plus.disabled){
					wb_tl.xcall("updateContent",{tostring(tl_time);tostring(tl_title);tostring(tl_content)})
				}
				else {
					winform.listboxUpdate(winform);
					winform.timelineWebUpdate(winform);
				}
				winform.addUIReset(winform);
		}
		else {
			var x,y,cx,cy = winform.时间plus.getPos(true);
    		balloonTipCtrl.setText("时间格式不合法，请输入24小时制时间").trackPopup(true,x+cx*3/4,y+cy );
		}
	}
	else {
		var x,y,cx,cy = winform.时间plus.getPos(true);
    	balloonTipCtrl.setText("时间格式不合法，请输入24小时制时间").trackPopup(true,x+cx*3/4,y+cy );
	}
	
	win.delay(1000);
	winform.添加plus.disabled = false;
}

winform.listbox.oncommand = function(id,event){
    if( event ==  0x2/*_LBN_DBLCLK*/ ){
    	winform.勾选plus.checked = false;
    	winform.删除plus.disabled = false;
    	winform.取消plus.disabled = false;
    	winform.tiktokChecker(winform);
/*
    	winform.datetimepick.disabled = true;
    	winform.勾选plus.disabled = true;
    	winform.时间plus.editable = false;
		winform.时间plus.background = null;
*/

    	var result = ..dbTimeline.stepQuery("SELECT * FROM ??",{time = winform.listbox.selText, winform.当前主题.text} );
    	winform.datetimepick.time = time(result.time);
    	winform.时间plus.text = string.split(result.time,'-')[2];
    	winform.标题plus.text = result.title;
    	winform.内容plus.text = result.content;
    	//手动显示提示
    	var x,y,cx,cy = winform.添加plus.getPos(true);
    	balloonTipCtrl.setText("点击<添加>保存，否则不修改").trackPopup(true,x+cx*3/4,y+cy );
	}
}

import win.ui.accelerator;
win.ui.accelerator({
	{ ctrl = true; vkey = 'G'#; oncommand = winform.添加plus.oncommand } 
},winform);

winform.wndproc = function(hwnd,message,wParam,lParam){
	select( message ) { 
		case 3/*_WM_MOVE*/{
			if(winform.勾选plus.disabled){
			    var x,y,cx,cy = winform.添加plus.getPos(true);
    			balloonTipCtrl.setText("点击<添加>保存，否则不修改").trackPopup(true,x+cx*3/4,y+cy );
			}
		}
		else{
			
		}
	}
	//无返回值则继续调用默认回调函数
}

winform.删除plus.oncommand = function(id,event){
	var tl_time = winform.datetimepick.text + '-' + winform.时间plus.text; 
	var confirmed = win.msgboxTest("确认删除"""+tl_time+"""吗？","确认删除");
	if(confirmed){
		try{
			..dbTimeline.exec("DELETE FROM ?? WHERE time=?;",{ winform.当前主题.text,tl_time} )
			..logWarn(">>>已删除项",winform.当前主题.text,"中的：",tl_time)
			
			wb_tl.xcall("removeContent",{tostring(tl_time)});
			winform.listboxUpdate(winform);
			winform.timelineWebUpdate(winform);
			
			winform.addUIReset(winform);
		}
		catch(e){
			..logErr(">>>删除",winform.当前主题.text,"中的：",tl_time,"失败")
			..logErr(e)
		}
	}
	else {
		..logWarn(">>>取消删除")
	}
}

winform.取消plus.oncommand = function(id,event){
	winform.addUIReset(winform);
}

winform.当前主题.skin(
	background = { 
		hover = "/res/images/btn-hover.png";
		focus = "/res/images/btn-focus.jpg";
		active = "/res/images/btn-active.png";
		disabled = "/res/images/btn-disabled.png"; 
	}
)

winform.show();
winform.win时间线.setFocus();
win.loopMessage();
return winform;