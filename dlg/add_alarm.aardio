import fonts.fontAwesome;

import win.ui;
import win.ui.atom;
/*DSG{{*/
var winform = win.form(text="添加闹钟";right=303;bottom=256;border="none";clipch=1;max=false)
winform.add(
alarmState={cls="plus";left=7;top=209;right=295;bottom=250;align="left";font=LOGFONT(italic=255;h=-13);multiline=1;valign="top";wrap=1;z=11};
combobox={cls="combobox";left=7;top=163;right=119;bottom=187;edge=1;font=LOGFONT(h=-13);items={};mode="dropdown";z=10};
datetimepick={cls="datetimepick";left=28;top=55;right=276;bottom=79;dl=1;dt=1;edge=1;font=LOGFONT(h=-13);z=1};
edithh={cls="edit";text="1";left=66;top=89;right=108;bottom=114;db=1;dl=1;edge=1;font=LOGFONT(h=-13);multiline=1;z=2};
editmm={cls="edit";text="1";left=129;top=89;right=171;bottom=114;db=1;dl=1;edge=1;font=LOGFONT(h=-13);multiline=1;z=4};
editss={cls="edit";text="1";left=190;top=89;right=232;bottom=114;db=1;dl=1;edge=1;font=LOGFONT(h=-13);multiline=1;z=8};
plusBtn={cls="plus";text="添加闹钟(Ctrl+G)";left=148;top=159;right=296;bottom=189;align="left";bgcolor=-5197169;border={radius=22};font=LOGFONT(h=-13);iconStyle={align="left";font=LOGFONT(h=-15;name='FontAwesome');padding={left=10;top=3}};iconText='\uF274';notify=1;textPadding={left=30};z=7};
plusContent={cls="plus";left=28;top=122;right=276;bottom=154;bgcolor=16777215;border={bottom=1;color=-6908266};editable=1;font=LOGFONT(h=-13);textPadding={top=6;bottom=2};z=6};
plusSplit={cls="plus";text="__________________________________________________________";left=7;top=191;right=295;bottom=210;align="left";autohscroll=false;autovscroll=false;font=LOGFONT(h=-11);valign="top";z=16};
["plus分"]={cls="plus";text="分";left=173;top=89;right=189;bottom=114;font=LOGFONT(h=-13);z=14};
["plus时"]={cls="plus";text="时";left=111;top=89;right=127;bottom=114;font=LOGFONT(h=-13);z=13};
["plus秒"]={cls="plus";text="秒";left=236;top=89;right=252;bottom=114;font=LOGFONT(h=-13);z=15};
spinhh={cls="spin";left=88;top=89;right=108;bottom=114;db=1;dl=1;font=LOGFONT(h=-13);z=3};
spinmm={cls="spin";left=151;top=89;right=171;bottom=114;db=1;dl=1;font=LOGFONT(h=-13);z=5};
spinss={cls="spin";left=214;top=89;right=234;bottom=114;db=1;dl=1;font=LOGFONT(h=-13);z=9};
timeNow={cls="plus";left=72;top=24;right=234;bottom=47;font=LOGFONT(h=-13;weight=700);z=12}
)
/*}}*/

var atom,hwnd/*冲突窗口的句柄,该函数会自动激活此窗口*/ = winform.atom("BA886D45-C828-4ECB-B520-66FC5263545F");
if(!atom){
	/*为窗口设置原子值可以避免一个程序重复运行多个实例*/
	win.show(hwnd,true);
	win.quitMessage();	
	return;
}

winform.plusBtn.skin({
	background={
		default=0x668FB2B0;
		disabled=0xFFCCCCCC;
		hover=0xFF928BB3
	};
	color={
		default=0xFF000000;
		disabled=0xFF6D6D6D
	}
})

winform.plusContent.setCueBannerText("请输入闹钟标题");

winform.combobox.items = {"左上角显示";"左下角显示";"居中显示";"右上角显示";"右下角显示";}
winform.combobox.selIndex = 5;

import quarks;
//计划任务导入
import win.taskScheduler;
var taskScheduler = win.taskScheduler( winform );
//winform.datetimepick.setFormat("''HH':'mm':'ss, dddd, MMMdd日', 'yyyy")
winform.datetimepick.setFormat("          yyyy年MM月dd日dddd")

var timeShowClock = taskScheduler.create("timeShowClock",function(){
    var timeNowSeconds = time(,"%H:%M:%S");
    winform.timeNow.text = "当前时间 " + tostring(timeNowSeconds);
});

timeShowClock.interval = { 
	second = 1;
};

taskScheduler.start();

var taskTable = {};
var scheduleTable = {};
if(..dbAlarmClock.existsTable("default")){
	..logMsg(">>>加载闹钟：")
	for rowid, time, content in ..dbAlarmClock.each("SELECT rowid,* FROM [default]") {
		taskTable[time] = content;
	}
	..logWarn(table.count(taskTable))
	if(table.count(taskTable)>0){
		for(k,v in taskTable){
			..logMsg(k,v)
			var tm = time(k,"%Y/%m/%d %H:%M:%S");
			tm.format = "%Y年%m月%d日%H时%M分%S秒";
			var tmstr = tostring(tm);
			
			tm.format = "%Y";
			var ystr = tostring(tm);
			
			tm.format = "%m";
			var mstr = tostring(tm);
			
			tm.format = "%d";
			var dstr = tostring(tm);
			
			tm.format = "%H";
			var Hstr = tostring(tm);
			
			tm.format = "%M";
			var Mstr = tostring(tm);
			
			tm.format = "%S";
			var Sstr = tostring(tm);
			var AlarmContent = v;
			scheduleTable[k] = taskScheduler.create(k,function(AlarmContent,k){
				var frmChild = ..mainForm.loadForm("\dlg\alarms.aardio");
				frmChild.updateContent(AlarmContent,k);

				win.setParent(frmChild.hwnd,win.getDesktop());
				
				winform.enableDpiScaling("init");
				var alarmClockX, alarmClockY = winform.showPos(winform.combobox.selText, frmChild.width, frmChild.height);		
				win.setPos(frmChild.hwnd, alarmClockX, alarmClockY);
				frmChild.show();
				
				win.setTopmost(frmChild.hwnd);
				win.setForeground(frmChild.hwnd);
				frmChild.redrawBackground();
				win.flash(frmChild.hwnd,32);
				
			},AlarmContent,k);
			
			scheduleTable[k].time = { 
    			second =  Sstr ;
    			minute = Mstr ; 
    			hour = Hstr ;
    			day = dstr ;
    			month = mstr ;
			};
		}
	}
	
	
}

winform.onClose = function(hwnd,message,wParam,lParam){
    winform.show(false);
    return true; 
}


import win.ui.simpleWindow;
win.ui.simpleWindow(winform,,,,).skin(
	background = { 
		hover = 0xff99ffcc;
		active = 0xffff6666; 
		default = 0x00000000; 
	}
	color = { 
		hover = 0xff666666;
		active = 0xffffffff; 
		default = 0xFF7BA5BF; 
	}
)

winform.spinhh.buddy = winform.edithh; 
winform.spinhh.setRange(0,23); //一定要设置数值的上下限
winform.spinhh.pos = tostring(time(__,'%H'));//设置数值
winform.spinhh.inc = 1;//设置每次点击箭头的增减量（步长）

//处理spin事件通知,将要改变值之前触发
winform.spinhh.onnotify = function(id,code,ptr){ 
	if(code==0xFFFFFD2E/*_UDN_DELTAPOS*/){
		var nmUpDown = ..raw.convert(ptr, {
			struct hdr = ::NMHDR();
			int pos; //当前位置
			int delta; //位置的增减量,单击向上箭头此值为负数
		} );  
	} 
}

winform.spinmm.buddy = winform.editmm; 
winform.spinmm.setRange(0,59); //一定要设置数值的上下限
winform.spinmm.pos = tostring(time(__,'%M'));//设置数值
winform.spinmm.inc = 1;//设置每次点击箭头的增减量（步长）

//处理spin事件通知,将要改变值之前触发
winform.spinmm.onnotify = function(id,code,ptr){ 
	if(code==0xFFFFFD2E/*_UDN_DELTAPOS*/){
		var nmUpDown = ..raw.convert(ptr, {
			struct hdr = ::NMHDR();
			int pos; //当前位置
			int delta; //位置的增减量,单击向上箭头此值为负数
		} );  
	} 
}

winform.spinss.buddy = winform.editss; 
winform.spinss.setRange(0,59); //一定要设置数值的上下限
winform.spinss.pos = tostring(time(__,'%S'));//设置数值
winform.spinss.inc = 1;//设置每次点击箭头的增减量（步长）

//处理spin事件通知,将要改变值之前触发
winform.spinss.onnotify = function(id,code,ptr){ 
	if(code==0xFFFFFD2E/*_UDN_DELTAPOS*/){
		var nmUpDown = ..raw.convert(ptr, {
			struct hdr = ::NMHDR();
			int pos; //当前位置
			int delta; //位置的增减量,单击向上箭头此值为负数
		} );  
	} 
}

winform.showPos = function(posStr, frmChildWidth, frmChildHeight){
	
	var alarmWidth, alarmHeight = frmChildWidth, frmChildHeight;
	
	
	var workAreaTable = win.getWorkArea(win.getDesktop());
	var bottomPos, leftPos, rightPos, topPos = workAreaTable.bottom, workAreaTable.left, workAreaTable.right, workAreaTable.top;
	
	var alarmPosX, alarmPosY = leftPos, topPos;
	
	var PosLUX, PosLUY = leftPos, topPos;
	var PosRUX, PosRUY = rightPos-alarmWidth, topPos;
	var PosRDX, PosRDY = rightPos-alarmWidth, bottomPos-alarmHeight;
	var PosLDX, PosLDY = leftPos, bottomPos-alarmHeight;
	var PosMX, PosMY = leftPos + (rightPos-leftPos)*0.5-alarmWidth*0.5, topPos + (bottomPos-topPos)*0.5-alarmHeight*0.5;

	var hwndForeground = win.getForeground();
	var workAreaTable = win.getWorkArea(hwndForeground);
	var bottomPos, leftPos, rightPos, topPos = workAreaTable.bottom, workAreaTable.left, workAreaTable.right, workAreaTable.top;
	
	var PosLUX, PosLUY = leftPos, topPos;
	var PosRUX, PosRUY = rightPos-alarmWidth, topPos;
	var PosRDX, PosRDY = rightPos-alarmWidth, bottomPos-alarmHeight;
	var PosLDX, PosLDY = leftPos, bottomPos-alarmHeight;
	var PosMX, PosMY = leftPos + (rightPos-leftPos)*0.5-alarmWidth*0.5, topPos + (bottomPos-topPos)*0.5-alarmHeight*0.5;
	
	select(posStr) {
		case "居中显示" {
			alarmPosX, alarmPosY = PosMX, PosMY;
		}
		case "左上角显示" {
			alarmPosX, alarmPosY = PosLUX, PosLUY;
		}
		case "右上角显示" {
			alarmPosX, alarmPosY = PosRUX, PosRUY;
		}
		case "右下角显示" {
			alarmPosX, alarmPosY = PosRDX, PosRDY;
		}
		case "左下角显示" {
			alarmPosX, alarmPosY = PosLDX, PosLDY;
		}
		else {
			alarmPosX, alarmPosY = PosMX, PosMY;
		}
	};
	
	return alarmPosX, alarmPosY; 
}


winform.plusBtn.oncommand = function(id,event){
	winform.plusBtn.disabled = true;
	
	var tempTime = tostring(time(winform.datetimepick.time,"%Y/%m/%d")) + "  "+ winform.edithh.text + ":" + winform.editmm.text + ":" + winform.editss.text;
	
	//从字符串创建时间值
	var tm = time(tempTime,"%Y/%m/%d %H:%M:%S");
	

	if(winform.plusContent.text == ""){
		taskTable[tempTime] = "闹钟来了";
	}
	else {
		taskTable[tempTime] = winform.plusContent.text;
	}
	
	var cmd = ..dbAlarmClock.prepare("REPLACE INTO [default] VALUES ( @time,@content);");
	cmd.step(
		time = tempTime;
		content = taskTable[tempTime];
	)
	
	tm.format = "%Y年%m月%d日%H时%M分%S秒";
	var tmstr = tostring(tm);
	
	tm.format = "%Y";
	var ystr = tostring(tm);
	
	tm.format = "%m";
	var mstr = tostring(tm);
	
	tm.format = "%d";
	var dstr = tostring(tm);
	
	tm.format = "%H";
	var Hstr = tostring(tm);
	
	tm.format = "%M";
	var Mstr = tostring(tm);
	
	tm.format = "%S";
	var Sstr = tostring(tm);
	
	var AlarmContent = taskTable[tempTime];
	..logMsg("添加闹钟：",tempTime,AlarmContent)
	scheduleTable[tempTime] = taskScheduler.create(tempTime,function(AlarmContent,tempTime){
		var frmChild = ..mainForm.loadForm("\dlg\alarms.aardio");
		frmChild.updateContent(AlarmContent,tempTime);
				
		win.setParent(frmChild.hwnd,win.getDesktop());
		
		winform.enableDpiScaling("init");
		var alarmClockX, alarmClockY = winform.showPos(winform.combobox.selText, frmChild.width, frmChild.height);
		win.setPos(frmChild.hwnd, alarmClockX, alarmClockY);
		frmChild.show();
		
		win.setTopmost(frmChild.hwnd);
		win.setForeground(frmChild.hwnd);
		frmChild.redrawBackground();
		win.flash(frmChild.hwnd,32);
		
	},AlarmContent,tempTime);
	
	scheduleTable[tempTime].time = { 
    	second =  Sstr ;
    	minute = Mstr ; 
    	hour = Hstr ;
    	day = dstr ;
    	month = mstr ;
	};
	
	winform.spinhh.pos = tostring(time(__,'%H'));
	winform.spinmm.pos = tostring(time(__,'%M'));
	winform.spinss.pos = tostring(time(__,'%S'));
	winform.plusContent.text = "";
	
	winform.alarmState.text = '闹钟：\n' + tmstr + '已添加';
	
	win.delay(1000)
	winform.plusBtn.disabled = false;

};

winform.wndproc = function(hwnd,message,wParam,lParam){
	select( message ) { 
		case 0x18/*_WM_SHOWWINDOW*/{
			winform.spinhh.pos = tostring(time(__,'%H'));
			winform.spinmm.pos = tostring(time(__,'%M'));
			winform.spinss.pos = tostring(time(__,'%S'));
		}
		else{

		}
	}
	//无返回值则继续调用默认回调函数
}

import win.ui.accelerator;
win.ui.accelerator({
	{ ctrl = true; vkey = 'G'#; oncommand = winform.plusBtn.oncommand }  
},winform);

//winform.show();
win.loopMessage();
return winform;